'scopeName': 'source.puppet'
'fileTypes': [
  'pp'
]
'foldingStartMarker': '(^\\s*/\\*|(\\{|\\[|\\()\\s*$)'
'foldingStopMarker': '(\\*/|^\\s*(\\}|\\]|\\)))'
'name': 'Puppet'
'patterns': [
  {
    'include': '#line_comment'
  }
  {
    'include': '#constants'
  }
  {
    'include': '#hash'
  }
  {
    'begin': '^\\s*/\\*'
    'end': '\\*/'
    'name': 'comment.block.puppet'
  }
  {
    'begin': '^\\s*(node|define|class|application)\\s+((?:[-_A-Za-z0-9"\'.]+::)*[-_A-Za-z0-9"\'.]+)\\s*'
    'beginCaptures':
      '1':
        'name': 'storage.type.puppet'
      '2':
        'name': 'entity.name.type.class.puppet'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.class.begin.puppet'
    'end': '{'
    'name': 'meta.definition.class.puppet'
    'patterns': [
      {
        'begin': '\\b(inherits)\\b\\s+'
        'captures':
          '1':
            'name': 'storage.modifier.puppet'
        'end': '{'
        'name': 'meta.definition.class.inherits.puppet'
        'patterns': [
          {
            'match': '\\b((?:[-_A-Za-z0-9".]+::)*[-_A-Za-z0-9".]+)\\b'
            'name': 'entity.name.type.class.puppet'
          }
        ]
      }
      {
        'include': '#defineparameters'
      }
    ]
  }
  {
    'beginCaptures':
      '1':
        'name': 'storage.type.puppet'
    'begin': '((?:[-_A-Za-z0-9".]+::)*[-_A-Za-z0-9".]+)\\s*{'
    'name': 'meta.definition.resource.puppet'
    'end': '}'
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.classtitle.puppet'
        'match': '(:)'
        'name': 'meta.title.puppet'
      }
      {
        'include': '#strings'
      }
      {
        'include': '#variables'
      }
      {
        'include': '#metaparameters'
      }
      {
        'beginCaptures':
          '1':
            'name': 'name.parameter.resource.puppet'
          '2':
            'name': 'punctuation.separator.key-value.puppet'
        'begin': '(\\w+)\\s*(=>)'
        'name': 'meta.parameter.resource.puppet'
        'end': ',|\\n|;'
        'patterns': [
          {
            'include': '#parameter-default-types'
          }
        ]
      }
    ]
  }
  {
    'include': '#conditionals'
  }
  {
    'include': '#strings'
  }
  {
    'match': '((\\$?)"?[a-zA-Z_\\x{7f}-\\x{ff}][a-zA-Z0-9_\\x{7f}-\\x{ff}]*"?):(?=\\s+|$)'
    'name': 'entity.name.section.puppet'
  }
  {
    'include': '#variables'
  }
  {
    'begin': '(?i)\\b(import|include)\\b\\s*'
    'beginCaptures':
      '1':
        'name': 'keyword.control.import.include.puppet'
    'end': '(?=\\s|$)'
    'name': 'meta.include.puppet'
  }
  {
    'match': '(?<={)\\s*\\w+\\s*(?=})'
    'name': 'constant.other.bareword.puppet'
  }
  {
    'include': '#assignments'
  }
  {
    'include': '#functions'
  }
]
'repository':
  'functions':
    'beginCaptures':
      '0':
        'name': 'support.function.puppet'
    'endCaptures':
      '0':
        'name': 'support.function.puppet'
    'begin': '(?:^|\\s|\\W)(\\w+)\\s*\\('
    'end': '\\)'
    'name': 'meta.function.puppet'
    'patterns': [
      {
        'include': '#parameter-default-types'
      }
    ]
  'double-quoted-string':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.puppet'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.puppet'
    'name': 'string.quoted.double.puppet'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variables'
      }
    ]
  'escaped_char':
    'match': '\\\\.'
    'name': 'constant.character.escape.puppet'
  'line_comment':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'comment.line.number-sign.puppet'
          '2':
            'name': 'punctuation.definition.comment.puppet'
        'match': '^((#).*$\\n?)'
        'name': 'meta.comment.full-line.puppet'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.comment.puppet'
        'match': '(#).*$\\n?'
        'name': 'comment.line.number-sign.puppet'
      }
    ]
  'nested_braces':
    'begin': '\\{'
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\}'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_braces'
      }
    ]
  'nested_braces_interpolated':
    'begin': '\\{'
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\}'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variables'
      }
      {
        'include': '#nested_braces_interpolated'
      }
    ]
  'nested_brackets':
    'begin': '\\['
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\]'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_brackets'
      }
    ]
  'nested_brackets_interpolated':
    'begin': '\\['
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\]'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variables'
      }
      {
        'include': '#nested_brackets_interpolated'
      }
    ]
  'nested_parens':
    'begin': '\\('
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_parens'
      }
    ]
  'nested_parens_interpolated':
    'begin': '\\('
    'captures':
      '1':
        'name': 'punctuation.section.scope.puppet'
    'end': '\\)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variables'
      }
      {
        'include': '#nested_parens_interpolated'
      }
    ]
  'parameter-default-types':
    'patterns': [
      {
        'include': '#strings'
      }
      {
        'include': '#numbers'
      }
      {
        'include': '#variables'
      }
      {
        'include': '#hash'
      }
      {
        'include': '#array'
      }
      {
        'include': "#functions"
      }
      {
        'include': '#constants'
      }
    ]
  'array':
      {
        'begin': '(\\[)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.array.begin.puppet'
        'end': '\\]'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.array.end.puppet'
        'name': 'meta.array.puppet'
        'patterns': [
          {
            'include': '#parameter-default-types'
          }
        ]
      }
  'hash':
      {
        'begin': '{'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.hash.begin.puppet'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.hash.end.puppet'
        'name': 'meta.hash.puppet'
        'patterns': [
          {
            'captures':
              '0':
                'name': 'punctuation.separator.key-value.puppet'
            'match': '=>'
            'name': 'meta.punctuation.hash.puppet'
          }
          {
            'include': '#parameter-default-types'
          }
        ]
      }
  'single-quoted-string':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.puppet'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.puppet'
    'name': 'string.quoted.single.puppet'
    'patterns': [
      {
        'include': '#escaped_char'
      }
    ]
  'strings':
    'patterns': [
      {
        'include': '#double-quoted-string'
      }
      {
        'include': '#single-quoted-string'
      }
    ]
  'variables':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.puppet'
        'match': '(\\$)([a-zA-Zx7f-xff\\$]|::)([a-zA-Z0-9_x7f-xff\\$]|::)*\\b'
        'name': 'variable.other.readwrite.global.puppet'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.puppet'
          '2':
            'name': 'punctuation.definition.variable.puppet'
        'match': '(\\$\\{)(?:[a-zA-Zx7f-xff\\$]|::)(?:[a-zA-Z0-9_x7f-xff\\$]|::)*(\\})'
        'name': 'variable.other.readwrite.global.puppet'
      }
    ]
  'constants':
    'beginCaptures':
      '0':
        'name': 'constant.support.puppet'
    'begin': '((?:[-_A-Za-z0-9"\'.]+::)*[-_A-Za-z0-9"\'.]+)\\['
    'endCaptures':
      '0':
        'name': 'constant.support.puppet'
    'end': '\\]'
    'patterns': [
      {
        'include': '#strings'
      }
      {
        'include': '#variables'
      }
    ]

  'conditionals':
    'patterns': [
      {
        'include': '#comparisons'
      }
      {
        'include': '#cases'
      }
    ]
  'comparisons':
    'beginCaptures':
      '2':
        'name': 'keyword.control.puppet'
    'begin': '(^|\\s)\\s*(if|else|unless|elsif)\\s+'
    'end': '{'
    'patterns': [
      {
        'include': '#parameter-default-types'
      }
      {
        'include': '#comparisonoperators'
      }
      {
        'include': '#negationoperators'
      }
    ]
  'comparisonoperators':
    'match': '(?:\\s|^)(={2}|!=|>|<|>=|<=|=~|!~|in)(?:\\s|^)'
    'name': 'keyword.control.puppet'
  'negationoperators':
    'captures':
      '1':
        'name': 'negation.keyword.control.puppet'
    'match': '(?:\\s|^)(not|!)(?:\\s|^)'
    'name': 'meta.keyword.control.puppet'
  'numbers':
    'captures':
      '1':
        'name': 'number.constant.puppet'
    'match': '(?:(?:\\D&\\W)|\\s|^|\\[|\\{|,|;|\\()(\\d+([.]\\d+)?)(?!\\w)'
    'name': 'meta.control.puppet'
  'defineparameters':
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.classparameter.begin.puppet'
    'begin': '\\('
    'endCaptures':
      '0':
        'name': 'punctuation.definition.classparameter.end.puppet'
    'end': '\\)'
    'name': 'meta.classparameter.language.puppet'
    'patterns': [
      {
        'include': '#parameter-default-types'
      }
    ]
